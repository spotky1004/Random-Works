const toTest = [
    [ /\[\]\[\"([^\[\]+]+)\"\]\+\[\]/g, (m, g1) => `"function ${g1}() { [native code] }"`],
    [ /(true|false)\+\[\]\[\"([^\[\]+]+)\"\]/g, (m, g1, g2) => `"${g1}function ${g2}() { [native code] }"`],
    [ /\n/g, () => "" ],
    [ /!\+\[\]/g, () => true ],
    [ /\[\]\[\[\]\]/g, () => undefined ],
    [ /undefined\+\[\]/g, () => "\"undefined\"" ],
    [ /\[([^\[\]]+)\]\+undefined/g, (_, g1) => `"${g1}undefined"`],
    [ /\(\"((?:[^"()]|\(\))+)\"\)\["?(\d+)"?\]/g, (_, g1, g2) => `"` + g1[g2] + `"` ],
    [ /"([^"]+)"\+"([^"]+)"/g, (_, g1, g2) => `"` + g1+g2 + `"` ],
    [ /(\d+)\+true/g, (_, g1) => +g1 + 1 ],
    [ /!\[\]/g, () => false ],
    [ /\+!\+\[\]/g, () => 1 ],
    [ /true\+true/g, () => 2 ],
    [ /!!\[\]/g, () => false ],
    [ /!false/g, () => true ],
    [ /!true/g, () => false ],
    [ /false\+\[\](?!\[)/g, () => "\"false\"" ],
    [ /true\+\[\](?!\[)/g, () => "\"true\"" ],
    [ /\+\[\](?!(?:\)|\[))/g, () => 0 ],
    [ /!0/g, () => true ],
    [ /\+true/g, () => 1 ],
    [ /\+(\d+)/g, (_, g1) => g1 ],
    [ /(\d+)\+\[(\d+)\]/g, (_, g1, g2) => `"` + g1+g2 + `"` ],
    [ /\"([^"]+)\"\+\[([^\[\]])\]/g, (_, g1, g2) => `"` + g1+g2 + `"`],
    [ /\[\]\[\"[^\[\]]+\"\]\["constructor"\](?!\()/g, () => "Function() { [native code] }"],
    [ /\[\]\[\"[^\[\]]+\"\]\["constructor"\]\(\"(.+)\"\)\(\)$/g, (_, g1) => `anonymous() {${g1}}`],
];

function stagedParseJsf(str, depth=0) {
    for (let i = 0; i < toTest.length; i++) {
        const data = toTest[i];
        if (data[0].test(str)) {
            str = str.replace(data[0], data[1]);
            console.log(str);
            console.log("#", depth, "************************************************");
            stagedParseJsf(str, depth+1);
            return str;
        }
    }
}

/** Case 1 */
// stagedParseJsf(`+!![]+[+[]]`);

/** Case 2 */
// stagedParseJsf(`[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+
// (!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+
// ([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+
// (!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+
// (!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+
// (!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+
// ([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+
// (!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+
// (![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+
// (!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+
// ([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+
// (!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]`);

/** Case 3 */
stagedParseJsf(``);
